version: '3'

services:
  web: 
    build: .
    restart: always
    command: >
      bash -c "
      python manage.py migrate &&
      python manage.py setup_groups &&
      python manage.py collectstatic --noinput &&
      gunicorn mab.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    expose:
      - 8000
    privileged: true
    volumes:
      - .:/mab
      - static_volume:/mab/static
      - newbiz:/mnt/newbiz
      - clientrelations:/mnt/clientrelations
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGTZ=America/New_York

  redis:
    image: redis:7

  celery:
    build: .
    restart: always
    command: celery -A config.settings worker -l info
    volumes: 
      - .:/mab
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    depends_on:
      - db
      - redis
      - web

  nginx:
    build: ./config/nginx
    restart: always
    ports:
     - ${NGINX_PORT}:80
    volumes:
     - static_volume:/static
    depends_on:
     - web


volumes:
  newbiz:
    external: true
  clientrelations:
    external: true
  static_volume:
  db_data:
    